[{"path":"https://ds-turner.github.io/ints/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 David Turner Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ds-turner.github.io/ints/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Turner. Author, maintainer.","code":""},{"path":"https://ds-turner.github.io/ints/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Turner D (2025). ints: Help Overlapping Intervals. R package version 0.0.0.9000, https://ds-turner.github.io/ints/, https://github.com/ds-turner/ints.","code":"@Manual{,   title = {ints: Help With Overlapping Intervals},   author = {David Turner},   year = {2025},   note = {R package version 0.0.0.9000, https://ds-turner.github.io/ints/},   url = {https://github.com/ds-turner/ints}, }"},{"path":"https://ds-turner.github.io/ints/index.html","id":"ints","dir":"","previous_headings":"","what":"Help With Overlapping Intervals","title":"Help With Overlapping Intervals","text":"{ints} helps tidy messy intervals. can group merge overlapping intervals well remove parts intervals, based intervals. {ints} uses {data.table} memory efficiency speed, always return data.table object.","code":""},{"path":"https://ds-turner.github.io/ints/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Help With Overlapping Intervals","text":"can install development version {ints} GitHub :","code":"pak::pak(\"ds-turner/ints\")"},{"path":"https://ds-turner.github.io/ints/index.html","id":"useage","dir":"","previous_headings":"","what":"Useage","title":"Help With Overlapping Intervals","text":"","code":"library(ints)"},{"path":"https://ds-turner.github.io/ints/index.html","id":"grouping-and-merging-intervals","dir":"","previous_headings":"Useage","what":"Grouping and Merging Intervals","title":"Help With Overlapping Intervals","text":"can group overlapping intervals using grp_ints. returns data add id intervals overlap can also merge overlapping intervals together using merge_ints. return interval start end, interval group id grouping variables used.","code":"ints <- data.frame(     id = c(\"A\", \"A\", \"A\", \"B\", \"B\", \"B\"),     st = c(1, 2, 6, 10, 12, 14),     end = c(3, 4, 7, 11, 14, 16)   )  ints #>   id st end #> 1  A  1   3 #> 2  A  2   4 #> 3  A  6   7 #> 4  B 10  11 #> 5  B 12  14 #> 6  B 14  16 grp_ints(ints, st, end, id) #>        id    st   end int_grp_id #>    <char> <num> <num>      <int> #> 1:      A     1     3          1 #> 2:      A     2     4          1 #> 3:      A     6     7          2 #> 4:      B    10    11          3 #> 5:      B    12    14          3 #> 6:      B    14    16          3 merge_ints(ints, st, end, id) #>        id int_grp_id    st   end #>    <char>      <int> <num> <num> #> 1:      A          1     1     4 #> 2:      A          2     6     7 #> 3:      B          3    10    16"},{"path":"https://ds-turner.github.io/ints/index.html","id":"triming-intervals","dir":"","previous_headings":"Useage","what":"Triming Intervals","title":"Help With Overlapping Intervals","text":"can remove parts intervals overlap intervals another data frame. example treatment data. patient period monthly treatment duration 2023. analysis consider different dose frequencies mutually exclusive hierarchical, .e. patient considered dosed weekly record daily dosing patient considered dosed monthly record weekly dosing. split intervals make sure everything mutually exclusive.","code":"trt <- data.frame(   pat_id = c(1, 1, 1,              2, 2, 2              ),   trt_start_date = as.Date(c(     \"2023-07-13\", \"2023-06-05\", \"2023-01-01\",     \"2023-03-02\", \"2023-03-05\", \"2023-01-01\"   )),   trt_end_date = as.Date(c(     \"2023-07-20\", \"2023-08-15\", \"2023-12-31\",     \"2023-03-10\", \"2023-03-15\", \"2023-12-31\"   )),   dose_freq = c(     \"daily\", \"weekly\",  \"monthly\",     \"daily\", \"weekly\", \"monthly\"   ) )  trt #>   pat_id trt_start_date trt_end_date dose_freq #> 1      1     2023-07-13   2023-07-20     daily #> 2      1     2023-06-05   2023-08-15    weekly #> 3      1     2023-01-01   2023-12-31   monthly #> 4      2     2023-03-02   2023-03-10     daily #> 5      2     2023-03-05   2023-03-15    weekly #> 6      2     2023-01-01   2023-12-31   monthly # create a list contaiing each dose level trt_list <- split(trt, trt$dose_freq)  # remove the parts of the week dosing periods that overlap with the daily dosing intervals trt_list$weekly <- trm_ints(   trt_list$weekly,   trt_list$daily,   trt_start_date,   trt_end_date,   trt_start_date,   trt_end_date,   pat_id,   .gap = 1   ) # remove the parts of the monthly dosing periods that overlap with the daily and weekly dosing intervals trt_list$monthly <- trm_ints(   trt_list$monthly,   rbind(trt_list$daily, trt_list$weekly),   trt_start_date,   trt_end_date,   trt_start_date,   trt_end_date,   pat_id,   .gap = 1   )  trt2 <- data.table::rbindlist(   trt_list ) data.table::setorder(trt2, pat_id, trt_start_date)  trt2 #>    pat_id trt_start_date trt_end_date dose_freq #>     <num>         <Date>       <Date>    <char> #> 1:      1     2023-01-02   2023-06-05   monthly #> 2:      1     2023-06-06   2023-07-12    weekly #> 3:      1     2023-07-13   2023-07-20     daily #> 4:      1     2023-07-21   2023-08-14    weekly #> 5:      1     2023-08-15   2023-12-30   monthly #> 6:      2     2023-01-02   2023-03-01   monthly #> 7:      2     2023-03-02   2023-03-10     daily #> 8:      2     2023-03-11   2023-03-14    weekly #> 9:      2     2023-03-15   2023-12-30   monthly"},{"path":"https://ds-turner.github.io/ints/index.html","id":"negative-intervals","dir":"","previous_headings":"Useage","what":"Negative Intervals","title":"Help With Overlapping Intervals","text":"can also create set intervals represent gaps given intervals intervals can upper lower bounds required","code":"ints <- data.frame(   id = c(\"a\", \"a\", \"a\", \"a\", \"a\", \"b\", \"b\", \"c\",   \"c\", \"c\", \"c\", \"d\"),   start = c(1, 4, 10, 18, 23, 7, 12, 1, 7, 12, 23, 10),   end = c(3, 7, 15, 21, 25, 9, 16, 3, 9, 16, 25, 15),   index = c(5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5),   study_end = c(20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20) ) ints #>    id start end index study_end #> 1   a     1   3     5        20 #> 2   a     4   7     5        20 #> 3   a    10  15     5        20 #> 4   a    18  21     5        20 #> 5   a    23  25     5        20 #> 6   b     7   9     5        20 #> 7   b    12  16     5        20 #> 8   c     1   3     5        20 #> 9   c     7   9     5        20 #> 10  c    12  16     5        20 #> 11  c    23  25     5        20 #> 12  d    10  15     5        20 neg_ints(ints, start, end, id) #>        id start   end #>    <char> <num> <num> #> 1:      a     8     9 #> 2:      a    16    17 #> 3:      a    22    22 #> 4:      b    10    11 #> 5:      c     4     6 #> 6:      c    10    11 #> 7:      c    17    22 neg_ints(ints, start, end, id, .lower = index, .upper = study_end) #>         id start   end index study_end #>     <char> <num> <num> <num>     <num> #>  1:      a     8     9     5        20 #>  2:      a    16    17     5        20 #>  3:      b     5     6     5        20 #>  4:      b    10    11     5        20 #>  5:      b    17    20     5        20 #>  6:      c     4     6     5        20 #>  7:      c    10    11     5        20 #>  8:      c    17    22     5        20 #>  9:      d     5     9     5        20 #> 10:      d    16    20     5        20"},{"path":"https://ds-turner.github.io/ints/index.html","id":"keywords","dir":"","previous_headings":"Useage > Negative Intervals","what":"Keywords","title":"Help With Overlapping Intervals","text":"interval packing; interval merging; interval cutting;","code":""},{"path":"https://ds-turner.github.io/ints/reference/grp_ints.html","id":null,"dir":"Reference","previous_headings":"","what":"Group Overlapping Intervals — grp_ints","title":"Group Overlapping Intervals — grp_ints","text":"function groups overlapping ints based start end. assigns unique group ID set overlapping ints. Intervals considered overlapping start one interval within gap threshold end another interval.","code":""},{"path":"https://ds-turner.github.io/ints/reference/grp_ints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group Overlapping Intervals — grp_ints","text":"","code":"grp_ints(.data, .start, .end, ..., .gap = 1, .group_col = int_grp_id)"},{"path":"https://ds-turner.github.io/ints/reference/grp_ints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group Overlapping Intervals — grp_ints","text":".data data frame containing interval data. .start column name (unquoted) representing start ints. .end column name (unquoted) representing end ints. ... Additional columns group identifying overlapping ints. .gap maximum allowed gap ints considered overlapping. Intervals grouped start one interval less equal end previous interval plus gap. Default 1. .group_col name column indicate group ID overlapping ints.  Default int_grp_id.","code":""},{"path":"https://ds-turner.github.io/ints/reference/grp_ints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group Overlapping Intervals — grp_ints","text":"data.table original data additional column indicating group ID overlapping ints (.group_id column).","code":""},{"path":"https://ds-turner.github.io/ints/reference/grp_ints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group Overlapping Intervals — grp_ints","text":"","code":"if (FALSE) { # \\dontrun{ data <- data.frame(   id = 1:5,   start = c(1, 2, 5, 10, 12),   end = c(3, 4, 7, 11, 14) )  # Group ints with a gap of 1 grp_ints(data, start, end, .gap = 1) } # }"},{"path":"https://ds-turner.github.io/ints/reference/ints-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ints: Help With Overlapping Intervals — ints-package","title":"ints: Help With Overlapping Intervals — ints-package","text":"Functions handling ints. primary functions `grp_ints` `merge_ints`, group overlapping continuous ints merge overlapping ints, respectively.","code":""},{"path":[]},{"path":"https://ds-turner.github.io/ints/reference/ints-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ints: Help With Overlapping Intervals — ints-package","text":"Maintainer: David Turner david.samuel.turner@gmail.com.com","code":""},{"path":"https://ds-turner.github.io/ints/reference/merge_ints.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge Overlapping Intervals — merge_ints","title":"Merge Overlapping Intervals — merge_ints","text":"function takes dataset ints (defined start end columns) groups overlapping ints using grp_ints. summarizes ints collapsing overlapping ints single interval per group, minimum start maximum end values group.","code":""},{"path":"https://ds-turner.github.io/ints/reference/merge_ints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge Overlapping Intervals — merge_ints","text":"","code":"merge_ints(.data, .start, .end, ..., .gap = 1, .group_col = int_grp_id)"},{"path":"https://ds-turner.github.io/ints/reference/merge_ints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge Overlapping Intervals — merge_ints","text":".data data frame containing interval data. .start column name (unquoted) representing start ints. .end column name (unquoted) representing end ints. ... Additional columns group identifying merging ints. .gap maximum allowed gap ints considered overlapping. Intervals grouped start one interval less equal end previous interval plus gap. .group_col name column store group IDs (default: int_grp_id). column used group overlapping ints.","code":""},{"path":"https://ds-turner.github.io/ints/reference/merge_ints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge Overlapping Intervals — merge_ints","text":"data.table summarized ints. row represents packed interval, minimum start value, maximum end value, grouping columns .group_id column.","code":""},{"path":"https://ds-turner.github.io/ints/reference/merge_ints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge Overlapping Intervals — merge_ints","text":"","code":"if (FALSE) { # \\dontrun{ data <- data.frame(   id = 1:5,   start = c(1, 2, 5, 10, 12),   end = c(3, 4, 7, 11, 14) )  # Merge ints with a gap of 1 merge_ints(data, start, end, .gap = 1)  # Merge ints with a custom group column name merge_ints(data, start, end, .gap = 1, .group_col = \"group_id\") } # }"},{"path":"https://ds-turner.github.io/ints/reference/neg_ints.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Negative Intervals Between Positive Intervals — neg_ints","title":"Generate Negative Intervals Between Positive Intervals — neg_ints","text":"neg_ints function calculates negative ints (gaps) positive ints dataset. useful identifying gaps time-based sequential data ints defined start end points. function allows specification lower upper bounds, well gap size ints.","code":""},{"path":"https://ds-turner.github.io/ints/reference/neg_ints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Negative Intervals Between Positive Intervals — neg_ints","text":"","code":"neg_ints(.data, .start, .end, ..., .lower = NULL, .upper = NULL, .gap = 1)"},{"path":"https://ds-turner.github.io/ints/reference/neg_ints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Negative Intervals Between Positive Intervals — neg_ints","text":".data data frame tibble containing interval data. .start column name .data representing start ints. .end column name .data representing end ints. ... Additional columns group calculating negative ints. .lower (Optional) column name value representing lower bound ints. NULL, lower bound applied. .upper (Optional) column name value representing upper bound ints. NULL, upper bound applied. .gap (Optional) size gap ints. Default 1.","code":""},{"path":"https://ds-turner.github.io/ints/reference/neg_ints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Negative Intervals Between Positive Intervals — neg_ints","text":"data frame tibble containing positive negative ints, columns start, end, lower bound, upper bound, interval type (int_type).","code":""},{"path":"https://ds-turner.github.io/ints/reference/neg_ints.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Negative Intervals Between Positive Intervals — neg_ints","text":"function calculates negative ints identifying gaps positive ints dataset. .lower provided, function ensures negative ints fall specified lower bound. .upper provided, function ensures negative ints exceed specified upper bound. function groups data columns specified ... calculate ints within group. int_type column added output distinguish positive (\"pos\") negative (\"neg\") ints. .data contains overlapping ints may get unexpected results.  Please use merge_ints required.","code":""},{"path":"https://ds-turner.github.io/ints/reference/neg_ints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Negative Intervals Between Positive Intervals — neg_ints","text":"","code":"data <- data.frame(   id = c(1, 1, 2, 2),   start = c(1, 5, 2, 6),   end = c(3, 7, 4, 8) )  result <- neg_ints(data, start, end, id, .gap = 1) print(result) #>       id start   end #>    <num> <num> <num> #> 1:     1     4     4 #> 2:     2     5     5"},{"path":"https://ds-turner.github.io/ints/reference/trm_ints.html","id":null,"dir":"Reference","previous_headings":"","what":"Trim Intervals Based on Overlaps — trm_ints","title":"Trim Intervals Based on Overlaps — trm_ints","text":"trm_ints function trims ints dataset x based overlaps ints dataset y. splits ints x boundaries overlaps y, removes unwanted ints, returns resulting ints. Optionally, output can ordered start end points.","code":""},{"path":"https://ds-turner.github.io/ints/reference/trm_ints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trim Intervals Based on Overlaps — trm_ints","text":"","code":"trm_ints(x, y, .x_start, .x_end, .y_start, .y_end, ..., .gap = 0, order = TRUE)"},{"path":"https://ds-turner.github.io/ints/reference/trm_ints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trim Intervals Based on Overlaps — trm_ints","text":"x data frame containing primary ints trimmed. y data frame containing ints used trim x. .x_start column name x representing start ints. .x_end column name x representing end ints. .y_start column name y representing start ints. .y_end column name y representing end ints. ... Additional columns group calculating overlaps trimming ints. .gap gaps left ints trimmed. Default 0. order logical value indicating whether order resulting ints start end points. Default TRUE.","code":""},{"path":"https://ds-turner.github.io/ints/reference/trm_ints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trim Intervals Based on Overlaps — trm_ints","text":"data.table containing trimmed ints x, columns start, end, grouping variables.","code":""},{"path":"https://ds-turner.github.io/ints/reference/trm_ints.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trim Intervals Based on Overlaps — trm_ints","text":"x y contains overlapping ints may get unexpected results.  Please use merge_ints required.","code":""},{"path":"https://ds-turner.github.io/ints/reference/trm_ints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trim Intervals Based on Overlaps — trm_ints","text":"","code":"x <- data.frame(   id = c(1, 1, 2, 2),   start = c(1, 5, 2, 6),   end = c(4, 8, 5, 9) )  y <- data.frame(   id = c(1, 2),   start = c(2, 4),   end = c(6, 7) )  result <- trm_ints(x, y, start, end, start, end, id) print(result) #>       id start   end #>    <num> <num> <num> #> 1:     1     1     2 #> 2:     1     6     8 #> 3:     2     2     4 #> 4:     2     7     9"}]
